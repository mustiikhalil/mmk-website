// automatically generated by the FlatBuffers compiler, do not modify
const flatbuffers = require('flatbuffers')
/**
 * @enum {number}
 */
var MediaType = {
  images: 0,
  video: 1
};

/**
 * @enum {string}
 */
var MediaTypeName = {
  '0': 'images',
  '1': 'video'
};

/**
 * @enum {number}
 */
var LinkType = {
  github: 0,
  appstore: 1
};

/**
 * @enum {string}
 */
var LinkTypeName = {
  '0': 'github',
  '1': 'appstore'
};

/**
 * @constructor
 */
function Media() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Media}
 */
Media.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Media=} obj
 * @returns {Media}
 */
Media.getRootAsMedia = function(bb, obj) {
  return (obj || new Media).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Media=} obj
 * @returns {Media}
 */
Media.getSizePrefixedRootAsMedia = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Media).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Media.prototype.url = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {MediaType}
 */
Media.prototype.type = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {MediaType} */ (this.bb.readInt8(this.bb_pos + offset)) : MediaType.images;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Media.startMedia = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} urlOffset
 */
Media.addUrl = function(builder, urlOffset) {
  builder.addFieldOffset(0, urlOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {MediaType} type
 */
Media.addType = function(builder, type) {
  builder.addFieldInt8(1, type, MediaType.images);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Media.endMedia = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} urlOffset
 * @param {MediaType} type
 * @returns {flatbuffers.Offset}
 */
Media.createMedia = function(builder, urlOffset, type) {
  Media.startMedia(builder);
  Media.addUrl(builder, urlOffset);
  Media.addType(builder, type);
  return Media.endMedia(builder);
}

/**
 * @constructor
 */
function Link() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Link}
 */
Link.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Link=} obj
 * @returns {Link}
 */
Link.getRootAsLink = function(bb, obj) {
  return (obj || new Link).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Link=} obj
 * @returns {Link}
 */
Link.getSizePrefixedRootAsLink = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Link).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Link.prototype.url = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {LinkType}
 */
Link.prototype.type = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {LinkType} */ (this.bb.readInt8(this.bb_pos + offset)) : LinkType.github;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Link.startLink = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} urlOffset
 */
Link.addUrl = function(builder, urlOffset) {
  builder.addFieldOffset(0, urlOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {LinkType} type
 */
Link.addType = function(builder, type) {
  builder.addFieldInt8(1, type, LinkType.github);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Link.endLink = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} urlOffset
 * @param {LinkType} type
 * @returns {flatbuffers.Offset}
 */
Link.createLink = function(builder, urlOffset, type) {
  Link.startLink(builder);
  Link.addUrl(builder, urlOffset);
  Link.addType(builder, type);
  return Link.endLink(builder);
}

/**
 * @constructor
 */
function Project() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Project}
 */
Project.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Project=} obj
 * @returns {Project}
 */
Project.getRootAsProject = function(bb, obj) {
  return (obj || new Project).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Project=} obj
 * @returns {Project}
 */
Project.getSizePrefixedRootAsProject = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Project).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Project.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Project.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Project.prototype.details = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Project.prototype.techStack = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Project.prototype.techStackLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Media=} obj
 * @returns {Media}
 */
Project.prototype.media = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new Media).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Project.prototype.mediaLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Link=} obj
 * @returns {Link}
 */
Project.prototype.links = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? (obj || new Link).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Project.prototype.linksLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Project.startProject = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
Project.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
Project.addName = function(builder, nameOffset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} detailsOffset
 */
Project.addDetails = function(builder, detailsOffset) {
  builder.addFieldOffset(2, detailsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} techStackOffset
 */
Project.addTechStack = function(builder, techStackOffset) {
  builder.addFieldOffset(3, techStackOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Project.createTechStackVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Project.startTechStackVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} mediaOffset
 */
Project.addMedia = function(builder, mediaOffset) {
  builder.addFieldOffset(4, mediaOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Project.createMediaVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Project.startMediaVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} linksOffset
 */
Project.addLinks = function(builder, linksOffset) {
  builder.addFieldOffset(5, linksOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Project.createLinksVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Project.startLinksVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Project.endProject = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 * @param {flatbuffers.Offset} nameOffset
 * @param {flatbuffers.Offset} detailsOffset
 * @param {flatbuffers.Offset} techStackOffset
 * @param {flatbuffers.Offset} mediaOffset
 * @param {flatbuffers.Offset} linksOffset
 * @returns {flatbuffers.Offset}
 */
Project.createProject = function(builder, id, nameOffset, detailsOffset, techStackOffset, mediaOffset, linksOffset) {
  Project.startProject(builder);
  Project.addId(builder, id);
  Project.addName(builder, nameOffset);
  Project.addDetails(builder, detailsOffset);
  Project.addTechStack(builder, techStackOffset);
  Project.addMedia(builder, mediaOffset);
  Project.addLinks(builder, linksOffset);
  return Project.endProject(builder);
}

/**
 * @constructor
 */
function Projects() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
}

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Projects}
 */
Projects.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Projects=} obj
 * @returns {Projects}
 */
Projects.getRootAsProjects = function(bb, obj) {
  return (obj || new Projects).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Projects=} obj
 * @returns {Projects}
 */
Projects.getSizePrefixedRootAsProjects = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Projects).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {Project=} obj
 * @returns {Project}
 */
Projects.prototype.data = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Project).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Projects.prototype.dataLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Projects.startProjects = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
Projects.addData = function(builder, dataOffset) {
  builder.addFieldOffset(0, dataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Projects.createDataVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Projects.startDataVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Projects.endProjects = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
Projects.finishProjectsBuffer = function(builder, offset) {
  builder.finish(offset);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
Projects.finishSizePrefixedProjectsBuffer = function(builder, offset) {
  builder.finish(offset, undefined, true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 * @returns {flatbuffers.Offset}
 */
Projects.createProjects = function(builder, dataOffset) {
  Projects.startProjects(builder);
  Projects.addData(builder, dataOffset);
  return Projects.endProjects(builder);
}

// Exports for Node.js and RequireJS
this.MediaType = MediaType;
this.MediaTypeName = MediaTypeName;
this.LinkType = LinkType;
this.LinkTypeName = LinkTypeName;
this.Media = Media;
this.Link = Link;
this.Project = Project;
this.Projects = Projects;
